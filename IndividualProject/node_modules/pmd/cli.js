#!/usr/bin/env node

const electron = require('electron')
const fs = require('fs')
const meow = require('meow')
const mkdirp = require('mkdirp')
const path = require('path')
const spawn = require('child_process').spawn


const cli = meow({
	help: [
		'usage',
		'pmd file.md'
	]
}, {
	alias: {
		'o': ['output'],
		'l': ['language']
	}
})

const files = cli.input

if (!files || !files.length) {
	cli.showHelp()
}

var outputDir = cli.flags['output']
var lang = cli.flags['language']
if (!lang) lang = 'auto'

if (outputDir) {
	outputDir = path.resolve(outputDir)
	mkdirp(outputDir)
}

function render (file, cb) {
	const filePath = path.resolve(file)

	if (!fs.existsSync(filePath)) {
		console.error('Cannot access ', file + ': No such file')
		process.exit(1)
	}

	const filePathData = path.parse(filePath)

	var fileOutputDir = "";
	if (outputDir) fileOutputDir = outputDir
	else fileOutputDir = filePathData.dir

	// path where output file will be stored
	var outputFilePath = path.join(fileOutputDir, filePathData.name + '.pdf')

	var proc = spawn(electron, [
		path.join(__dirname, 'index.js'),
		filePath,
		outputFilePath,
		lang
	])

	proc.stdout.pipe(process.stdout)

	proc.on('close', cb)
}

function loop (i) {
	if (i == files.length) return
	render(files[i], function () {
		loop(i + 1)
	})
}

loop(0)

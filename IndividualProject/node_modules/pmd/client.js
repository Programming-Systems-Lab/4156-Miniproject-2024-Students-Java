const highlightjs = require('highlight.js')
const marked = require('marked')
const {remote, ipcRenderer} = require('electron')

var lang = 'auto'

marked.setOptions({
	highlight: function (code) {
		if (lang === 'auto') {
                        return highlightjs.highlightAuto(code).value
                }

                return highlightjs.highlight(lang, code, true).value
	}
})

ipcRenderer.on('data', function (event, message) {
	var data = message.data
	const isMarkdown = message.isMarkdown
	lang = message.lang;

	if (!isMarkdown) {
		data = data.replace(/```/g, '')
		data = '```\n' + data + '\n```'
	}

	const markup = marked(data)
	const base = document.querySelector('base')
	const body = document.querySelector('.markdown-body')
	base.setAttribute('href', remote.getGlobal('baseUrl'))
	body.innerHTML = markup

	// TODO: this is bullshit, find a better way to
	// wait for assets to load, then send print ready message
	setTimeout(function () {
		ipcRenderer.send('readyToPrint')
	}, 2000)
})
